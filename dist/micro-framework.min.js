/**
 * MicroFramework - A lightweight micro-frontend framework
 * 
 * Features:
 * - Framework-agnostic architecture
 * - SPA routing with history/hash modes
 * - Dynamic module loading with lifecycle management
 * - Event system with filtering/pipeline capabilities
 * - TypeScript support
 * 
 * @version 1.0.1
 * @author Aramics <npm@ankabit.com>
 * @license MIT
 * @homepage https://github.com/ankabit/micro-framework#readme
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).MicroFramework={})}(this,function(e){"use strict";const t={FRAMEWORK_READY:"framework:ready",FRAMEWORK_DESTROYED:"framework:destroyed",MODULE_REGISTERED:"module:registered",MODULE_UNREGISTERED:"module:unregistered",MODULE_LOAD:"module:load",MODULE_ERROR:"module:error",ROUTE_REGISTERED:"route:registered",ROUTE_WILL_CHANGE:"route:will_change",ROUTE_CHANGE:"route:change",ROUTE_ERROR:"route:error",ROUTE_404:"route:404",LOADING_CHANGE:"loading:change",ERROR:"error",CONTAINER_REINITIALIZED:"container:reinitialized",CONTAINER_REMOVED:"container:removed",CONTAINER_RECOVERED:"container:recovered",CONTAINER_RECOVERY_FAILED:"container:recovery_failed",CONTAINER_ERROR:"container:error",PLUGIN_INSTALLED:"plugin:installed"};class r{constructor(e,t={}){this.framework=e,this.config={enableLogging:t.enableLogging||!1,logPrefix:t.logPrefix||"[Event]",...t},this.eventHistory=[],this.maxHistorySize=100}emit(e,t=null,r="framework"){this.isValidEvent(e)||console.warn(`Unknown event emitted: ${e}`),this.config.enableLogging&&console.log(`${this.config.logPrefix} EMIT ${e}`,t),this.addToHistory(e,t,r),this.framework.emitRaw(e,t)}async filter(e,t=null,r="framework"){this.isValidEvent(e)||console.warn(`Unknown event emitted: ${e}`),this.config.enableLogging&&console.log(`${this.config.logPrefix} FILTER ${e}`,t),this.addToHistory(`${e}:filter`,t,r);const n=await this.framework.filterRaw(e,t);return this.config.enableLogging&&console.log(`${this.config.logPrefix} FILTER RESULT ${e}`,n),this.addToHistory(`${e}:filter-result`,n,r),n}isValidEvent(e){return Object.values(t).includes(e)}addToHistory(e,t,r){const n={name:e,data:t,source:r,timestamp:Date.now(),time:(new Date).toISOString()};this.eventHistory.push(n),this.eventHistory.length>this.maxHistorySize&&this.eventHistory.shift()}getHistory(){return[...this.eventHistory]}getEventNames(){return Object.values(t)}clearHistory(){this.eventHistory=[]}}class n{constructor(e,t={}){this.framework=e,this.modules=new Map,this.currentModule=null,this.config={moduleBase:t.moduleBase||"./modules/",lazy:!1!==t.lazy}}registerModule(e,r){if("object"!=typeof r||!r.render)throw new Error("Module must be an object with a render method");if(this.modules.set(e,{name:e,...r}),r.onRegister)try{r.onRegister(this.framework.getContext()),console.log(`Module '${e}' onRegister hook executed`)}catch(t){console.error(`Error in onRegister hook for module '${e}':`,t)}if(r.routes){let t=0;Array.isArray(r.routes)?r.routes.forEach(r=>{if("string"==typeof r)this.framework.router.registerRoute(r,{module:e,handler:"default"}),t++;else if(r.path){const n={module:e,handler:r.handler||"default",...r};delete n.path,this.framework.router.registerRoute(r.path,n),t++}}):"object"==typeof r.routes&&Object.entries(r.routes).forEach(([r,n])=>{const o=this.normalizeRouteOptions(n),i={module:e,...o};o.useModuleRender&&delete i.useModuleRender,this.framework.router.registerRoute(r,i),t++}),t>0&&console.log(`Auto-registered ${t} routes for module '${e}'`)}this.framework.emit(t.MODULE_REGISTERED,{name:e,module:r}),console.log(`Module '${e}' registered`)}normalizeRouteOptions(e){return"string"==typeof e||"function"==typeof e?{handler:e}:"object"==typeof e&&null!==e?0!==Object.keys(e).length&&e.handler?e:{...e,useModuleRender:!0}:{useModuleRender:!0}}unregisterModule(e){const r=this.modules.get(e);r&&(this.modules.delete(e),this.framework.emit(t.MODULE_UNREGISTERED,{name:e,module:r}),console.log(`Module '${e}' unregistered`))}async loadModule(e,r={}){this.framework.showLoading(!0);try{let n=this.modules.get(e);if(!n&&this.config.lazy&&(n=await this.dynamicImport(e)),!n)throw new Error(`Module '${e}' not found`);n.beforeMount&&await n.beforeMount(r,this.framework.getContext()),this.currentModule&&this.currentModule.destroy&&await this.currentModule.destroy();const o=this.framework.getContainer();o.innerHTML="",await n.render(o,r,this.framework.getContext()),n.afterMount&&await n.afterMount(o,r,this.framework.getContext()),this.currentModule=n,this.framework.emit(t.MODULE_LOAD,{name:e,module:n,params:r})}catch(r){this.framework.emit(t.MODULE_ERROR,{name:e,error:r}),this.framework.showError(`Failed to load module: ${e}`,r)}finally{this.framework.showLoading(!1)}}async dynamicImport(e){try{const t=`${this.config.moduleBase}${e}.js`,r=await import(t),n=r.default||r;if(n)return this.registerModule(e,n),this.modules.get(e)}catch(t){console.warn(`Could not dynamically import module: ${e}`,t)}return null}getCurrentModule(){return this.currentModule}getModules(){return this.modules}}class o{constructor(e,t={}){this.framework=e,this.routes=new Map,this.currentRoute=null,this.config={mode:t.mode||"history",base:t.base||"",hashbang:t.hashbang||!1,beforeEnter:t.beforeEnter||null,afterEnter:t.afterEnter||null,notFoundHandler:t.notFoundHandler||null},this.handleRouteChange=this.handleRouteChange.bind(this)}initialize(){"history"===this.config.mode?window.addEventListener("popstate",this.handleRouteChange):window.addEventListener("hashchange",this.handleRouteChange)}handleRouteChange(){const e=this.getCurrentRoute();this.navigate(e,{skipHistory:!0})}registerRoute(e,r={}){if(!r.handler&&!r.module)throw new Error("Route must specify either a handler or module in options");const n={path:e,exact:!1!==r.exact,beforeEnter:r.beforeEnter,afterEnter:r.afterEnter,module:r.module||null,handler:r.handler||null,...r};this.routes.set(e,n),this.framework.emit(t.ROUTE_REGISTERED,n);let o="";n.module&&n.handler?o=`module '${n.module}' with handler`:n.module&&!n.handler?o=`module '${n.module}' (render only)`:"function"==typeof n.handler?o="function handler":"string"==typeof n.handler&&(o="template handler"),console.log(`Route '${e}' registered with ${o}`)}async navigate(e,r={}){const n=this.findMatchingRoute(e);if(n){if(this.framework.emit(t.ROUTE_WILL_CHANGE,{to:n,from:this.currentRoute,path:e}),this.config.beforeEnter){if(!1===await this.config.beforeEnter(n,this.currentRoute))return}if(n.beforeEnter){if(!1===await n.beforeEnter(n,this.currentRoute))return}r.skipHistory||this.updateBrowserUrl(e);try{await this.handleRoute(n),n.afterEnter&&n.afterEnter(n,this.currentRoute),this.config.afterEnter&&this.config.afterEnter(n,this.currentRoute),this.currentRoute=n,this.framework.emit(t.ROUTE_CHANGE,n)}catch(e){this.framework.emit(t.ROUTE_ERROR,{route:n,error:e}),console.error("Navigation error:",e)}}else this.handle404(e)}async handleRoute(e){e.module&&await this.framework.moduleManager.loadModule(e.module,e.params),e.handler&&("function"==typeof e.handler?await e.handler(e.params,this.framework.getContext(),e):"string"==typeof e.handler&&this.framework.render(this.processTemplate(e.handler,e.params,this.framework.getContext())))}processTemplate(e,t,r){return e.replace(/\{\{(\w+)\}\}/g,(e,n)=>t.hasOwnProperty(n)?t[n]:r.hasOwnProperty(n)?r[n]:e)}getCurrentRoute(){if("history"===this.config.mode){let e=window.location.pathname;return this.config.base&&(e=e.replace(new RegExp(`^${this.config.base}`),"")),e||"/"}{let e=window.location.hash;return this.config.hashbang&&e.startsWith("#!")?e.substring(2)||"/":e.startsWith("#")&&e.substring(1)||"/"}}findMatchingRoute(e){if(this.routes.has(e))return{...this.routes.get(e),params:{}};for(const[t,r]of this.routes){const n=this.matchRoute(t,e);if(n)return{...r,params:n.params}}return null}matchRoute(e,t){const r=e.split("/"),n=t.split("/");if(r.length!==n.length)return null;const o={};return r.every((e,t)=>{if(e.startsWith(":")){const r=e.substring(1);return o[r]=n[t],!0}return e===n[t]})?{params:o}:null}updateBrowserUrl(e){if("history"===this.config.mode){const t=this.config.base+e;history.pushState({path:e},"",t)}else{const t=this.config.hashbang?`#!${e}`:`#${e}`;window.location.hash=t}}handle404(e){if(this.config.notFoundHandler)if("function"==typeof this.config.notFoundHandler)this.config.notFoundHandler(e,this.framework.getContext());else if("string"==typeof this.config.notFoundHandler){const t=this.config.notFoundHandler.replace(/\{\{path\}\}/g,e);this.framework.render(t)}else"object"==typeof this.config.notFoundHandler&&this.config.notFoundHandler.module&&this.framework.moduleManager.loadModule(this.config.notFoundHandler.module,{path:e});else this.framework.render(`\n                <div class="mf-error mf-error-404">\n                    <h1>404 - Page Not Found</h1>\n                    <p>The route <code>${e}</code> was not found.</p>\n                    <button class="mf-btn mf-btn-primary" onclick="window.MicroFramework.navigate('/')">\n                        Go Home\n                    </button>\n                </div>\n            `);this.framework.emit(t.ROUTE_404,{path:e})}getRoutes(){return this.routes}destroy(){window.removeEventListener("popstate",this.handleRouteChange),window.removeEventListener("hashchange",this.handleRouteChange)}}class i{constructor(e={}){this.config={container:e.container||"#app",loadingSpinner:e.loadingSpinner||null,...e},this.eventListeners=new Map,this.eventManager=new r(this,{enableLogging:e.enableEventLogging||!1,logPrefix:e.eventLogPrefix||"[MicroFramework Event]"}),this.moduleManager=new n(this,{moduleBase:e.moduleBase,lazy:e.lazy}),this.router=new o(this,{mode:e.router?.mode||e.mode||"history",base:e.router?.base||e.base||"",hashbang:e.router?.hashbang||e.hashbang||!1,beforeEnter:e.router?.beforeEnter||null,afterEnter:e.router?.afterEnter||null,notFoundHandler:e.router?.notFoundHandler||e.notFoundHandler||null}),this.moduleContainer=null,this.loadingSpinner=null,this.containerObserver=null,this.isStarted=!1,this.isLoading=!1,this.handleLinkClick=this.handleLinkClick.bind(this)}start(){this.isStarted?console.warn("MicroFramework already started"):(this.initializeContainer(),this.router.initialize(),this.setupEventListeners(),this.handleInitialRoute(),this.isStarted=!0,this.emit(t.FRAMEWORK_READY),console.log("🚀 MicroFramework started"))}isContainerValid(){return this.moduleContainer&&this.moduleContainer.isConnected&&document.contains(this.moduleContainer)}getContainer(){if(!this.isContainerValid()){console.warn("Container is stale, attempting to re-initialize...");try{this.initializeContainer(),this.emit(t.CONTAINER_REINITIALIZED)}catch(e){throw console.error("Failed to re-initialize container:",e),this.emit(t.CONTAINER_ERROR,e),e}}return this.moduleContainer}render(e){const t=this.getContainer();"string"==typeof e?t.innerHTML=e:e instanceof HTMLElement?(t.innerHTML="",t.appendChild(e)):"function"==typeof e&&(t.innerHTML="",e(t))}initializeContainer(){if(this.containerObserver&&(this.containerObserver.disconnect(),this.containerObserver=null),"string"==typeof this.config.container?this.moduleContainer=document.querySelector(this.config.container):this.moduleContainer=this.config.container,!this.moduleContainer)throw new Error("Module container not found");this.config.loadingSpinner&&("string"==typeof this.config.loadingSpinner?this.loadingSpinner=document.querySelector(this.config.loadingSpinner):this.loadingSpinner=this.config.loadingSpinner),this.setupContainerObserver()}setupContainerObserver(){this.moduleContainer&&this.moduleContainer.parentNode&&(this.containerObserver=new MutationObserver(e=>{let r=!1;for(const t of e){for(const e of t.removedNodes)if(e===this.moduleContainer||e.contains&&e.contains(this.moduleContainer)){r=!0;break}if(r)break}r&&(console.warn("Container was removed from DOM"),this.emit(t.CONTAINER_REMOVED),this.moduleContainer=null,this.isStarted&&setTimeout(()=>this.attemptContainerRecovery(),100))}),this.containerObserver.observe(this.moduleContainer.parentNode,{childList:!0,subtree:!0}))}attemptContainerRecovery(){try{console.log("Attempting container recovery..."),this.initializeContainer();const e=this.moduleManager.getCurrentModule();e&&e.render&&(console.log("Re-rendering current module after container recovery"),e.render(this.moduleContainer)),this.emit(t.CONTAINER_RECOVERED)}catch(e){console.error("Container recovery failed:",e),this.emit(t.CONTAINER_RECOVERY_FAILED,e)}}setupEventListeners(){document.addEventListener("click",this.handleLinkClick)}handleLinkClick(e){const t=e.target.closest("[data-route]");if(t){e.preventDefault();const r=t.dataset.route;this.router.navigate(r)}}handleInitialRoute(){const e=this.router.getCurrentRoute();this.router.navigate(e,{skipHistory:!0})}registerModule(e,t){return this.moduleManager.registerModule(e,t)}unregisterModule(e){return this.moduleManager.unregisterModule(e)}registerRoute(e,t={}){return this.router.registerRoute(e,t)}async navigate(e,t={}){return this.router.navigate(e,t)}async loadModule(e,t={}){return this.moduleManager.loadModule(e,t)}getCurrentRoute(){return this.router.getCurrentRoute()}get modules(){return this.moduleManager.getModules()}get routes(){return this.router.getRoutes()}get currentModule(){return this.moduleManager.getCurrentModule()}get currentRoute(){return this.router.currentRoute}showLoading(e){this.isLoading=e,this.loadingSpinner&&(this.loadingSpinner.style.display=e?"flex":"none"),this.emit(t.LOADING_CHANGE,e)}showError(e,r=null){try{this.render(`\n                <div class="mf-error">\n                    <h1>Error</h1>\n                    <p>${e}</p>\n                    ${r?`<pre>${r.message}</pre>`:""}\n                    <button class="mf-btn mf-btn-primary" onclick="location.reload()">\n                        Reload\n                    </button>\n                </div>\n            `)}catch(t){console.error("Failed to show error in container:",t),console.error("Original error:",e,r),this.showFallbackError(e,r)}this.emit(t.ERROR,{message:e,error:r})}showFallbackError(e,t=null){const r=`\n            <div style="position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); \n                        background: #f8d7da; color: #721c24; padding: 20px; border: 1px solid #f5c6cb; \n                        border-radius: 4px; z-index: 10000; max-width: 500px;">\n                <h2>MicroFramework Error</h2>\n                <p><strong>Container Error:</strong> ${e}</p>\n                ${t?`<pre style="background: #f1f1f1; padding: 10px; border-radius: 3px;">${t.message}</pre>`:""}\n                <button onclick="location.reload()" style="margin-top: 10px; padding: 8px 16px; \n                        background: #dc3545; color: white; border: none; border-radius: 3px; cursor: pointer;">\n                    Reload Page\n                </button>\n            </div>\n        `;if(document.body){const e=document.createElement("div");e.innerHTML=r,document.body.appendChild(e)}else alert(`MicroFramework Error: ${e}${t?"\n\n"+t.message:""}`)}getContext(){return{framework:this,navigate:this.navigate.bind(this),render:this.render.bind(this),emit:this.emit.bind(this),filter:this.filter.bind(this),on:this.on.bind(this),off:this.off.bind(this)}}on(e,t){this.eventListeners.has(e)||this.eventListeners.set(e,[]),this.eventListeners.get(e).push(t)}off(e,t){if(this.eventListeners.has(e)){const r=this.eventListeners.get(e),n=r.indexOf(t);n>-1&&r.splice(n,1)}}emit(e,t=null){this.eventManager.emit(e,t,"framework")}async filter(e,t=null){return await this.eventManager.filter(e,t,"framework")}emitRaw(e,t=null){this.eventListeners.has(e)&&this.eventListeners.get(e).forEach(r=>{try{r(t)}catch(t){console.error(`Error in event listener for '${e}':`,t)}})}async filterRaw(e,t=null){if(!this.eventListeners.has(e))return t;const r=this.eventListeners.get(e);let n=t;for(const o of r)try{const e=o(n);n=e&&"function"==typeof e.then?await e:e,void 0===n&&(n=t)}catch(t){console.error(`Error in filter listener for '${e}':`,t)}return n}use(e){"function"==typeof e.install?(e.install(this),this.emit(t.PLUGIN_INSTALLED,e)):console.warn("Plugin must have an install method")}destroy(){this.router.destroy(),document.removeEventListener("click",this.handleLinkClick),this.containerObserver&&(this.containerObserver.disconnect(),this.containerObserver=null);const e=this.moduleManager.getCurrentModule();e&&e.destroy&&e.destroy();try{this.render("")}catch(e){console.log("Container not available during destroy - this is normal")}this.eventListeners.clear(),this.moduleContainer=null,this.loadingSpinner=null,this.isStarted=!1,this.emit(t.FRAMEWORK_DESTROYED)}getEventHistory(){return this.eventManager.getHistory()}clearEventHistory(){this.eventManager.clearHistory()}getEventNames(){return this.eventManager.getEventNames()}}
/**
     * MicroFramework - A lightweight micro-frontend framework
     * Main entry point that exports all public APIs
     */"undefined"!=typeof window&&(window.MicroFramework=i,window.MicroFramework.EVENTS=t),"undefined"!=typeof module&&module.exports&&(module.exports=i,module.exports.EVENTS=t,module.exports.EventManager=r,module.exports.ModuleManager=n,module.exports.Router=o),"function"==typeof define&&define.amd&&define(()=>({default:i,MicroFramework:i,EVENTS:t,EventManager:r,ModuleManager:n,Router:o})),e.EVENTS=t,e.EventManager=r,e.MicroFramework=i,e.ModuleManager=n,e.Router=o,e.default=i,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=micro-framework.min.js.map
